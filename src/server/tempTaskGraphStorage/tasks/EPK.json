{
	"API": [
		{
			"task": "epk",
			"name": "generateEPK",
			"httpMethod": "post",
			"params": { "parameters": "object" }
		}
	],
	"Worker": {
		"epkTask": {
			"minConsumers": 1,
			"consumerInstructions": {
				"generateEPK": {
					"dependencies": ["EPKTaskGenerator"],
					"body": "async (taskDescription) => { let result = {}; try { const g = new EPKTaskGenerator(); result = g.generateTask(taskDescription.parameters); } catch (error) { console.error(error); result = error; } return result; }"
				}
			}
		}
	},
	"UI": {
		"taskData": {},
		"rootNode": 0,
		"topology": [[0, null, null]],
		"edges": {
			"0": [1],
			"1": []
		},
		"currentNode": 0,
		"taskMode": "practice",
		"nodes": {
			"0": {
				"zoomScale": 1,
				"layouts": {
					"sm": [{ "x": 12, "y": 5, "w": 2, "h": 5, "i": 1, "static": false }],
					"md": [{ "x": 0, "y": 10, "w": 2, "h": 5, "i": 1, "static": false }],
					"lg": [
						{ "x": 32, "y": 29, "w": 4, "h": 4, "i": 0, "static": false },
						{ "x": 36, "y": 29, "w": 2, "h": 2, "i": 1, "static": false }
					]
				},
				"isValid": false,
				"components": {
					"0": {
						"type": "DOTGraph",
						"name": "EPK",
						"isValid": true,
						"dependencies": {
							"dotDescription": "taskData__dotDescription"
						}
					},
					"1": {
						"type": "TaskConfiguration",
						"name": "Konfiguration",
						"isValid": true,
						"component": {
							"title": "Parameter Konfiguration",
							"actions": [
								{
									"instruction": "generateEPK",
									"type": "fetchData",
									"label": "Generieren!",
									"dependsOn": ["nodeRange", "degreeRange", "hasTarget", "seed"]
								}
							],
							"form": {
								"maxDepth": {
									"formType": "ValueFormField",
									"label": "Tiefe",
									"type": "number",
									"value": "5",
									"boundaries": { "min": 5, "max": 20 },
									"validate": true,
									"presets": {
										"easy": "",
										"medium": "",
										"hard": ""
									}
								},
								"rootVertices": {
									"formType": "ValueFormField",
									"label": "Wurzelknoten",
									"type": "number",
									"value": "2",
									"boundaries": { "min": 1, "max": 5 },
									"validate": true,
									"presets": {
										"easy": "",
										"medium": "",
										"hard": ""
									}
								},
								"trendRange": {
									"formType": "RangeFormField",
									"label": "Wahrscheinlichkeiten",
									"type": "number",
									"boundaries": { "min": 0, "max": 1 },
									"step": 0.05,
									"initial": {
										"lowerValue": 0.15,
										"upperValue": 0.7
									},
									"presets": {
										"easy": [2, 10],
										"medium": 3,
										"hard": 5
									}
								},
								"seed": {
									"formType": "ValueFormField",
									"label": "Seed",
									"type": "text",
									"value": "",
									"validate": false,
									"presets": {
										"easy": "",
										"medium": "",
										"hard": ""
									}
								}
							}
						}
					}
				}
			},
			"1": {
				"zoomScale": 1,
				"layouts": {
					"sm": [{ "x": 12, "y": 5, "w": 2, "h": 5, "i": 1, "static": false }],
					"md": [{ "x": 0, "y": 10, "w": 2, "h": 5, "i": 1, "static": false }],
					"lg": [
						{
							"x": 34,
							"y": 29,
							"w": 4,
							"h": 4,
							"i": 0,
							"minW": 3,
							"minH": "4",
							"preserveAspectRatio": false,
							"static": false
						},
						{ "x": 38, "y": 29, "w": 3, "h": 2, "i": 2, "static": false }
					]
				},
				"modals": [
					{
						"trigger": {
							"type": "success"
						},
						"content": {
							"header": "Herzlichen Glückwunsch!",
							"body": "Sie haben die Aufgabe erfolgreich gelöst!",
							"footer": {
								"buttons": [
									{ "type": "close", "label": "Zurück", "parameters": {} },
									{ "type": "route", "label": "Zur Übersicht", "parameters": { "route": "TaskOverview" } }
								]
							}
						},
						"active": false
					}
				],
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Modelliere anhand der gegebenen Prozessbeschreibung den Prozess mit Hilfe der EPK-Notation."
					]
				},
				"components": {
					"0": {
						"type": "ItemPallet",
						"name": "EPKPallette",
						"isValid": false,
						"isCorrect": false,
						"methods": {},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"dragElements": {
								"Event": {
									"componentType": "DOTGraph",
									"props": {
										"graphID": "Event"
									},
									"elementSelector": "Event",
									"dropData": {
										"template": {
											"label": "",
											"shape": "hexagon",
											"fixedSize": "false",
											"type": "event"
										}
									}
								},
								"Function": {
									"componentType": "DOTGraph",
									"props": {
										"graphID": "Function"
									},
									"elementSelector": "Function",
									"dropData": {
										"template": {
											"label": "",
											"shape": "rect",
											"style": "rounded",
											"fixedSize": "false",
											"type": "function"
										}
									}
								},
								"Gate": {
									"componentType": "DOTGraph",
									"props": {
										"graphID": "Gate"
									},
									"elementSelector": "Gate",
									"dropData": {
										"template": {
											"label": "",
											"shape": "circle",
											"fixedSize": "false",
											"type": "gate"
										}
									}
								}
							},
							"dropZones": {
								"EPK": {
									"componentType": "ManipulatableGraph",
									"props": {},
									"accept": ["Event", "Function", "Gate"],
									"dropZoneBehaviour": "StoreDragElement",
									"droppedElements": []
								}
							}
						},
						"dependencies": {},
						"nestedComponents": {
							"Event": {
								"type": "DOTGraph",
								"name": "Event",
								"isValid": true,
								"component": {
									"dotDescription": "graph { 0 [label=Event shape=hexagon] }"
								},
								"dependencies": {}
							},
							"Function": {
								"type": "DOTGraph",
								"name": "Function",
								"isValid": true,
								"component": {
									"dotDescription": "graph { 0 [label=Function shape=rect style=rounded] }"
								},
								"dependencies": {}
							},
							"Gate": {
								"type": "DOTGraph",
								"name": "Gate",
								"isValid": true,
								"component": {
									"dotDescription": "graph { 0 [label=Gate shape=circle] }"
								},
								"dependencies": {}
							},
							"EPK": {
								"type": "ManipulatableGraph",
								"name": "EPK",
								"isValid": false,
								"component": {
									"dotUserGraph": "digraph\n{\ngraph [bgcolor=transparent bgcolor=transparent]\n}",
									"userGraph": {},
									"validationData": "",
									"editable": ["event", "function", "gate"]
								},
								"dependencies": {
									"droppedElements": "nodes__1__components__0__component__dropZones__EPK__droppedElements",
									"dragElements": "nodes__1__components__0__component__dragElements"
								},
								"nestedComponents": {
									"DOTGraph": {
										"type": "DOTGraph",
										"name": "EPK",
										"isValid": true,
										"component": {},
										"dependencies": {
											"dotDescription": "nodes__1__components__0__nestedComponents__EPK__component__dotUserGraph"
										}
									}
								}
							}
						}
					},
					"1": {
						"type": "ManipulatableGraph",
						"name": "Modellierung",
						"isValid": false,
						"isCorrect": false,
						"methods": {},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"editableFields": ["tb", "fb", "est", "eet", "lst", "let"],
							"userValues": null
						},
						"dependencies": {
							"dotDescription": "taskData__dotDescription",
							"validationData": "taskData__dotDescription"
						},
						"nestedComponents": {
							"DOTGraph": {
								"type": "DOTGraph",
								"name": "EPK",
								"isValid": false,
								"isCorrect": false,
								"methods": {},
								"contextMenu": {
									"isOpen": false,
									"usedMethods": []
								},
								"dependencies": {
									"dotDescription": "nodes__1__components__0__component__nestedComponents__EPK__component__userGraph"
								}
							}
						}
					},
					"2": {
						"type": "Output",
						"name": "Prozessbeschreibung",
						"isValid": true,
						"dependencies": {
							"Output": {
								"serverOutput": "nodes__0__components__2__component__description"
								
							}
						},
						"component": {
							"header": "Prozessbeschreibung",
							"description": "Nach Eingang der Bestellung wird geprüft, ob das vom Kunden/Händler gewünschte Produkt auf Lager ist. Ist das Produkt vorrätig, erfolgen die Verpackung und Etikettierung des Produkts bzw. der Produkte. Damit sind die Produkte versandbereit. Endet die Prüfung des Bestands mit dem Ergebnis, dass die Produkte nicht bzw. nicht vollständig im Lager vorhanden sind, wird der Produktionsabteilung ein Auftrag zur Fertigung erteilt. Ist das Produkt vorrätig, erfolgen die Verpackung und Etikettierung des Produkts bzw. der Produkte. Damit sind die Produkte versandbereit."
						}
					},
					"3": {
						"type": "Interact",
						"name": "DragTest",
						"isValid": false,
						"isCorrect": false,
						"methods": {},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {},
						"dependencies": {},
						"nestedComponents": {}
					}
				}
			}
		}
	}
}
