{
	"API": [
		{
			"task": "Ferment",
			"name": "generateFermentationDataMain",
			"httpMethod": "post",
			"params": {
				"parameters": "object"
			}
		}
	],
	"Worker": {
		"FermentTask": {
			"minConsumers": 1,
			"consumerInstructions": {
				"generateFermentationDataMain": {
					"dependencies": ["generateFermentationDataMain"],
					"body": "async (taskDescription) => {let result = {};try { result = generateFermentationDataMain(taskDescription)} catch{} return result; }"
				}
			}
		}
	},
	"UI": {
		"currentTask": "test",
		"taskMode": "strictPractice",
		"taskData": {},
		"rootNode": 0,
		"previousNode": 0,
		"topology": [
			[0, null, null],
			[1, 2, null],
			[3, 4, null],
			[5, 6, null],
			[7, 8, null],
			[9, null, null],
			[10, null, null]
		],
		"edges": {
			"0": [1],
			"1": [0]
		},
		"currentNode": 0,
		"nodes": {
			"0": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 31,
							"y": 37,
							"w": 3,
							"h": 4,
							"i": 0,
							"static": false
						},
						{
							"x": 10,
							"y": 5,
							"w": 2,
							"h": 3,
							"i": 1,
							"static": false
						},
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 0,
							"w": 5,
							"h": 6,
							"i": 0,
							"static": false
						},
						{
							"x": 0,
							"y": 5,
							"w": 2,
							"h": 3,
							"i": 1,
							"static": false
						},
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 33,
							"y": 28.5,
							"w": 3,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 33.5,
							"y": 30.5,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 30,
							"y": 32.5,
							"w": 8,
							"h": 2,
							"i": 2,
							"static": false
						},
						{
							"x": 40,
							"y": 32,
							"w": 4,
							"h": 2.2,
							"i": 3,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Wählen Sie zuerst den Organismus aus.<br> Dann Ziehen Sie den Schieberegler nach rechts oder links um die Anzahl der Phasen zu bestimmen. <br> Dann geben sie die Werte für die zwei stehende Tabellen ein.",
						"Viel Erfolg! <br><br> <img width=\"100px;\" height=\"100px\"; src=\"https://images.emojiterra.com/twitter/512px/1f340.png\" />"
					]
				},
				"isValid": false,
				"components": {
					"0": 
					{
						"type": "BackendFormular",
						"name": "Konfiguration",
						"isValid": true,
						"component":{
							"title": "Parameter Konfiguration",
							"actions": [
								{
									"instruction": "generateFerment",
									"type": "fetchData",
									"label": "Berechnen!",
									"dependsOn": ["nodeAmount","seed"]
								}
							],
							"form": {
								"nodeAmount": {
									"isValid": false,
									"formType": "DropdownFormField",
                                    "label": "Organismus",
                                    "type": "string",
                                    "description": "Zur Verfügung stehende Organismus",
                                    "action": { "instruction": "fetchTaskData", "type": "fetchData", "key": "schema" },
                                    "initial": "S.cerevisiae",
                                    "options": ["S.cerevisiae", "E.coli", "Testorganismus"],
                                    "presets": {
                                        "easy": "S.cerevisiae",
                                        "medium": "E.coli",
                                        "hard": "Testorganismus"
                                    }
								},
								"seed": {
									"formType": "ValueFormField",
									"label": "Phasenanzahl",
									"type": "text",
									"description": "Setze einen beliebigen Wert für die Phasenanzahl",
									"value": "3",
									"validate": false,
									"presets": {
										"easy": "",
										"medium": "",
										"hard": ""
									}
								}
							},
							"data" : {
								"userDataMatrix": "nodes__0__components__2__component__userData",
								"userDataInputFelder": "nodes__0__components__1__component__inputFelderValues"
							}
						}
					},
					"1":{
						"type": "Bild",
						"component":{
							"pfad":"/img/tasks/Ferment/FermentALADIN_bild.png",
							"inputFelder":[
								{
									"type":"text",
									"placeholder":"V ges.",
									"align" : "left",
									"width":"50px"
								},
								{
									"type":"text",
									"placeholder":"V start",
									"align" : "left",
									"width":"50px"
								},
								{
									"type":"text",
									"placeholder":"T",
									"align" : "right",
									"width":"50px"
								},
								{
									"type":"text",
									"placeholder":"PH",
									"align" : "left",
									"width":"50px"
								},
								{
									"type":"text",
									"placeholder":"BTM",
									"align" : "right",
									"width":"50px"
								},
								{
									"type":"text",
									"placeholder":"DO",
									"align" : "left",
									"width":"50px"
								}
							],
							"inputFelderValues":{}
						}
					},
					"2":{
							"name": "Direktbedarfsmatrix",
							"type": "Matrix",
							"isValid": false,
							"isCorrect": false,
							"dependencies": {
								"Matrix": {
									"data": "nodes__0__components__2__component__userData"
								}
							},
							"methods": {
								"fillZeros": {
									"description": "Ergänze Nullen",
									"impact": 0.5
								},
								"showSolution": {
									"description": "Zeige Lösung",
									"impact": 0
								},
								"copyToClipboard": {
									"description": "Kopieren",
									"impact": 1
								}
							},
							"contextMenu": {
								"isOpen": false,
								"usedMethods": []
							},
							"component": {
								"initialize": {
									"solution": {
										"operations": [],
										"paths": ["taskData__adjacencyMatrix"]
									},
									"validation": {
										"operations": [
											{
												"name": "getValueInitializedMatrix",
												"args": [
													{
														"isValid": false,
														"isCorrect": false
													}
												]
											}
										],
										"paths": ["taskData__adjacencyMatrix"]
									},
									"user": {
										"operations": [
											{
												"name": "getMatrix",
												"args": []
											}
										],
										"paths": ["taskData__adjacencyMatrix"]
									}
								},
								"standardZeile":[
									[0, 0, 0, 0, 100, 0,10]
								],
								"userData": [],
								"columnLabelData":[
									"Zuluft in NL/min",
									"Bolus in g/L",
									"Feed in g/(L*h)",
									"Bolus in g/L" ,
									"Drehzahl in rpm",
									"Druck in barg",
									"Dauer in h"
								],
								"rowLabelData":[
									"Phase"
								],
								"validationData": null,
								"solutionData": null,
								"readOnly": false,
								"rowLabel": "nodes__0__components__2__component__rowLabelData",
								"columnLabel": "nodes__0__components__2__component__columnLabelData",
								"inputType": "number",
								"rowAnzahl": "nodes__0__components__0__component__form__seed__value",
								"spaltenMaxSumme":[
									{
										"spaltenName": "Dauer in h",
										"maxSumme": 200
									}
								],
								"columnRange": [
									{
										"name": "Zuluft in NL/min",
										"min": 0,
										"max": 2
									},
									{
										"name": "Bolus in g/L",
										"min": 0,
										"max": 50
									},
									{
										"name": "Feed in g/(L*h)",
										"min": 0,
										"max": 10
									},
									{
										"name": "Bolus in g/L",
										"min": 0,
										"max": 10
									},
									{
										"name": "Drehzahl in rpm",
										"min": 100,
										"max": 2000
									},
									{
										"name": "Druck in barg",
										"min": 0,
										"max": 3
									},
									{
										"name": "Dauer in h",
										"min": 0,
										"max":"200"
									}
								]
							}
						},
					"3":{
						"name":"Ergebnis",
						"type": "",
						"component":{
							"title":"Fermentatiosverlauf",
							"type": "line",
							"labels":["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli"],
							"datasets":[
								{
									"label": "Anzahl der Besucher",
									"data": [65, 59, 80, 81, 56, 55, 40],
									"borderColor": "rgba(75, 192, 192, 1)",
                        			"backgroundColor": "rgba(75, 192, 192, 0.2)",
									"tension": 0.1								
								},
								{
									"label": "Dataset 2",
									"data": [28, 48, 40, 19, 86, 27, 90],
									"borderColor": "rgba(153, 102, 255, 1)",
									"backgroundColor": "rgba(153, 102, 255, 0.2)",
									"tension": 0
								}
							]
						}
					}
				}
			},
			"1": {
				"isValid": true,
				"chosenPath": "",
				"pathDescriptions": {
					"2": {
						"title": "Vazsonyi-Verfahren",
						"image": "/img/tasks/gozintograph/vaszonyi.png",
						"description": "Berechne den Primärbedarfsvektor mithilfe der inversen Direktbedarfsmatrix!"
					},
					"6": {
						"title": "Matrix-Multiplikation",
						"image": "/img/tasks/gozintograph/matmul.png",
						"description": "Berechne den Primärbedarfsvektor mittels Matrixmultiplikation!"
					},
					"8": {
						"title": "Kanten-Zählen",
						"image": "/img/tasks/gozintograph/graphTraversal.png",
						"description": "Berechne den Primärbedarfsvektor mittels Aufsummieren des Produkts der Knotenwerte und Kantengewichte!"
					}
				}
			},
			"2": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Lies zunächst die Direktbedarfsmatrix aus dem Graphen ab. Diese entspricht der <a target=\"_blank\" href=\"https://de.wikipedia.org/wiki/Adjazenzmatrix\">Adjazenzmatrix</a>."
					]
				},
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Direktbedarfsmatrix",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": false,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"1": {
						"type": "DOTGraph",
						"name": "Gozintograph",
						"isValid": true,
						"dependencies": {
							"dotDescription": "taskData__dotDescription"
						},
						"component": {}
					}
				}
			},
			"3": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 36,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 2,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": ["Bilde nun die Differenz aus der Einheitsmatrix und der Adjazenzmatrix."]
				},
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Direktbedarfsmatrix",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["nodes__2__components__0__component__userData"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [],
									"paths": ["nodes__2__components__0__component__userData"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"1": {
						"name": "Einheitsmatrix",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [
										{
											"name": "getIdentity",
											"args": [null]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [
										{
											"name": "getIdentity",
											"args": [null]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"2": {
						"name": "Ergebnis",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [
										{
											"name": "subtract",
											"args": ["chain"]
										}
									],
									"paths": ["nodes__3__components__1__component__userData", "taskData__adjacencyMatrix"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [
										{
											"name": "subtract",
											"args": ["chain"]
										},
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": [
										"nodes__3__components__1__component__userData",
										"nodes__3__components__0__component__userData"
									]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					}
				}
			},
			"4": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": ["In diesem Schritt muss das Inverse der zuvor berechneten Matrix gebildet werden."]
				},
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Ergebnis",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["nodes__3__components__2__component__userData"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [],
									"paths": ["nodes__3__components__2__component__userData"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"1": {
						"name": "Inverse Matrix",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "nodes__3__components__2__component__solutionData"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [
										{
											"name": "getInverse",
											"args": []
										}
									],
									"paths": ["nodes__3__components__2__component__userData"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": false,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["nodes__3__components__2__component__userData"]
								},
								"user": {
									"operations": [
										{
											"name": "getInverse",
											"args": []
										},
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": ["nodes__3__components__2__component__userData"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					}
				}
			},
			"5": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 32,
							"y": 31,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 29,
							"w": 1,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 34,
							"y": 31,
							"w": 1,
							"h": 2,
							"i": 2,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Zuletzt wird die Gesamtbedarfsmatrix mit dem Primärbedarfsvektor multipliziert um den Sekundärbedarfsvektor zu bilden."
					]
				},
				"modals": [
					{
						"trigger": {
							"type": "success"
						},
						"content": {
							"header": "Herzlichen Glückwunsch!",
							"body": "Sie haben die Aufgabe erfolgreich gelöst!",
							"footer": {
								"buttons": [
									{
										"type": "close",
										"label": "Zurück",
										"parameters": {}
									},
									{
										"type": "route",
										"label": "Zur Übersicht",
										"parameters": {
											"route": "TaskOverview"
										}
									}
								]
							}
						},
						"active": false
					}
				],
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Inverse Matrix",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "nodes__4__components__1__component__solutionData"
							}
						},
						"methods": {
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["nodes__4__components__1__component__userData"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["nodes__4__components__1__component__userData"]
								},
								"user": {
									"operations": [],
									"paths": ["nodes__4__components__1__component__userData"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"1": {
						"name": "Primärbedarfsvektor",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__valueVector",
								"label": "taskData__labelVector"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__valueVector"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__valueVector"]
								},
								"user": {
									"operations": [],
									"paths": ["taskData__valueVector"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": ""
						}
					},
					"2": {
						"name": "Sekundärbedarfsvektor",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "taskData__valueVector",
								"label": "taskData__labelVector"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [
										{
											"name": "multiply",
											"args": ["chain"]
										}
									],
									"paths": [
										"nodes__5__components__0__component__userData",
										"nodes__5__components__1__component__userData"
									]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": false,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__valueVector"]
								},
								"user": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": ["taskData__valueVector"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": ""
						}
					}
				}
			},
			"6": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Lies zunächst die Direktbedarfsmatrix aus dem Graphen ab. Diese entspricht der <a target=\"_blank\" href=\"https://de.wikipedia.org/wiki/Adjazenzmatrix\">Adjazenzmatrix</a>."
					]
				},
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Direktbedarfsmatrix",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": false,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"1": {
						"type": "DOTGraph",
						"name": "Gozintograph",
						"isValid": true,
						"dependencies": {
							"dotDescription": "taskData__dotDescription"
						},
						"component": {}
					}
				}
			},
			"7": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 36,
							"y": 28,
							"w": 1,
							"h": 2,
							"i": 2,
							"static": false
						},
						{
							"x": 36,
							"y": 30,
							"w": 1,
							"h": 2,
							"i": 3,
							"static": false
						}
					],
					"md": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 36,
							"y": 28,
							"w": 1,
							"h": 2,
							"i": 2,
							"static": false
						},
						{
							"x": 36,
							"y": 30,
							"w": 1,
							"h": 2,
							"i": 3,
							"static": false
						}
					],
					"lg": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 36,
							"y": 28,
							"w": 1,
							"h": 2,
							"i": 2,
							"static": false
						},
						{
							"x": 36,
							"y": 30,
							"w": 1,
							"h": 2,
							"i": 3,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Multipliziere gegebenfalls die dargestellten Direktbedarfsmatrizen in Reihenfolge auf. Addiere anschließend die n'ten Direktbedarfsmatrizen mit der Einheitsmatrix, um die Gesamtbedarfsmatrix zu erhalten.<br> Multipliziere diese daraufhin mit dem Primärbedarfsvektor um den Sekundärbedarfsvektor zu erhalten."
					]
				},
				"interjections": [
					{
						"method": "matrixSelfMultiplication",
						"dependencies": {
							"baseMatrix": "nodes__7__components__0",
							"n": "taskData__longestPath",
							"secondaryNeedsVector": "nodes__7__components__3"
						},
						"applied": false
					}
				],
				"modals": [
					{
						"trigger": {
							"type": "success"
						},
						"content": {
							"header": "Herzlichen Glückwunsch!",
							"body": "Sie haben die Aufgabe erfolgreich gelöst!",
							"footer": {
								"buttons": [
									{
										"type": "close",
										"label": "Zurück",
										"parameters": {}
									},
									{
										"type": "route",
										"label": "Zur Übersicht",
										"parameters": {
											"route": "TaskOverview"
										}
									}
								]
							}
						},
						"active": false
					}
				],
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Direktbedarfsmatrix",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["nodes__6__components__0__component__userData"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [],
									"paths": ["nodes__6__components__0__component__userData"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"1": {
						"name": "Einheitsmatrix",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__adjacencyMatrix"
							}
						},
						"methods": {
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [
										{
											"name": "getIdentity",
											"args": [null]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								},
								"user": {
									"operations": [
										{
											"name": "getIdentity",
											"args": [null]
										}
									],
									"paths": ["taskData__adjacencyMatrix"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": "taskData__labelVector"
						}
					},
					"2": {
						"name": "Primärbedarfsvektor",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__valueVector",
								"label": "taskData__labelVector"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__valueVector"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__valueVector"]
								},
								"user": {
									"operations": [],
									"paths": ["taskData__valueVector"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": ""
						}
					},
					"3": {
						"name": "Sekundärbedarfsvektor",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "taskData__valueVector",
								"label": "taskData__labelVector"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__solution"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": false,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__solution"]
								},
								"user": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": ["taskData__solution"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": ""
						}
					}
				}
			},
			"8": {
				"zoomScale": 1,
				"layouts": {
					"sm": [
						{
							"x": 12,
							"y": 5,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"md": [
						{
							"x": 0,
							"y": 10,
							"w": 2,
							"h": 5,
							"i": 2,
							"static": false
						}
					],
					"lg": [
						{
							"x": 32,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 0,
							"static": false
						},
						{
							"x": 34,
							"y": 30,
							"w": 2,
							"h": 2,
							"i": 1,
							"static": false
						},
						{
							"x": 36,
							"y": 30,
							"w": 1,
							"h": 2,
							"i": 2,
							"static": false
						},
						{
							"x": 37,
							"y": 30,
							"w": 1,
							"h": 2,
							"i": 3,
							"static": false
						},
						{
							"x": 32,
							"y": 32,
							"w": 4,
							"h": 2,
							"i": 4,
							"static": false
						}
					]
				},
				"hints": {
					"active": false,
					"current": 0,
					"descriptions": [
						"Finde zunächst alle Pfade des Graphen, indem du die jeweiligen Kanten des Graphen anklickst. <br> Du hast alle Pfade gefunden, wenn alle Kanten grün sind.",
						"<br>Bilde nun die Zwischensummen für jeden Knoten, indem du entgegen der Kantenrichtung die Bedarfe mit den Kantengewichten multiplizierst. <br>Als Gedankenstütze kannst du die Zwischenprodukte innerhalb des Textfelds aufschreiben. <br> Übertrage zuletzt die errechneten Werte der jeweiligen Knoten in den Sekundärbedarfsvektor."
					]
				},
				"modals": [
					{
						"trigger": {
							"type": "success"
						},
						"content": {
							"header": "Herzlichen Glückwunsch!",
							"body": "Sie haben die Aufgabe erfolgreich gelöst!",
							"footer": {
								"buttons": [
									{
										"type": "close",
										"label": "Zurück",
										"parameters": {}
									},
									{
										"type": "route",
										"label": "Zur Übersicht",
										"parameters": {
											"route": "TaskOverview"
										}
									}
								]
							}
						},
						"active": false
					}
				],
				"isValid": false,
				"isCorrect": false,
				"components": {
					"0": {
						"name": "Traversal",
						"type": "VisualGraphTraversal",
						"isValid": true,
						"dependencies": {
							"dotDescription": "taskData__dotDescription",
							"VisualGraphTraversal": {
								"nodes": "taskData__nodes",
								"paths": "taskData__paths",
								"dotDescription": "taskData__dotDescription"
							}
						},
						"component": {
							"selectedPaths": [],
							"colorCoding": {
								"standard": "black",
								"completed": "green",
								"selected": "red",
								"partial": "blue"
							}
						}
					},
					"1": {
						"type": "PathDisplay",
						"name": "display",
						"isValid": true,
						"dependencies": {
							"PathDisplay": {
								"selectedPaths": "nodes__8__components__0__component__selectedPaths",
								"nodes": "taskData__nodes"
							}
						},
						"component": {}
					},
					"2": {
						"name": "Primärbedarfsvektor",
						"type": "Matrix",
						"isValid": true,
						"dependencies": {
							"Matrix": {
								"data": "taskData__valueVector",
								"label": "taskData__labelVector"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__valueVector"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": true,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__valueVector"]
								},
								"user": {
									"operations": [],
									"paths": ["taskData__valueVector"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": true,
							"rowLabel": "taskData__labelVector",
							"columnLabel": ""
						}
					},
					"3": {
						"name": "Sekundärbedarfsvektor",
						"type": "Matrix",
						"isValid": false,
						"isCorrect": false,
						"dependencies": {
							"Matrix": {
								"data": "taskData__valueVector",
								"label": "taskData__labelVector"
							}
						},
						"methods": {
							"fillZeros": {
								"description": "Ergänze Nullen",
								"impact": 0.5
							},
							"showSolution": {
								"description": "Zeige Lösung",
								"impact": 0
							},
							"copyToClipboard": {
								"description": "Kopieren",
								"impact": 1
							}
						},
						"contextMenu": {
							"isOpen": false,
							"usedMethods": []
						},
						"component": {
							"initialize": {
								"solution": {
									"operations": [],
									"paths": ["taskData__solution"]
								},
								"validation": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [
												{
													"isValid": false,
													"isCorrect": false
												}
											]
										}
									],
									"paths": ["taskData__valueVector"]
								},
								"user": {
									"operations": [
										{
											"name": "getValueInitializedMatrix",
											"args": [null]
										}
									],
									"paths": ["taskData__valueVector"]
								}
							},
							"userData": null,
							"validationData": null,
							"solutionData": null,
							"readOnly": false,
							"rowLabel": "taskData__labelVector",
							"columnLabel": ""
						}
					},
					"4": {
						"name": "Rechenhilfe",
						"type": "TextArea",
						"isValid": true,
						"component": {
							"value": ""
						}
					}
				}
			}
		}
	}
}